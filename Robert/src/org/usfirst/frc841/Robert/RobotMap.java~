// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc841.Robert;
    

import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Victor;
import edu.wpi.first.wpilibj.VictorSP;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Compressor driveTrainCompressor1;
    public static SpeedController driveTrainLeftDrive1;
    public static SpeedController driveTrainRightDrive1;
    public static SpeedController driveTrainLeftDrive2;
    public static SpeedController driveTrainRightDrive2;
    public static SpeedController elevatorElevatorDrive1;
    public static SpeedController elevatorElevatorDrive2;
    public static AnalogInput elevatorHeightSensor;
    public static SpeedController intakesIntakeDrive1;
    public static SpeedController intakesIntakeDrive2;
    public static DoubleSolenoid intakesIntakeGrabber;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainCompressor1 = new Compressor(0);
        
        
        driveTrainLeftDrive1 = new VictorSP(10);
        LiveWindow.addActuator("DriveTrain", "LeftDrive1", (VictorSP) driveTrainLeftDrive1);
        
        driveTrainRightDrive1 = new VictorSP(9);
        LiveWindow.addActuator("DriveTrain", "RightDrive1", (VictorSP) driveTrainRightDrive1);
        
        driveTrainLeftDrive2 = new VictorSP(11);
        LiveWindow.addActuator("DriveTrain", "LeftDrive2", (VictorSP) driveTrainLeftDrive2);
        
        driveTrainRightDrive2 = new VictorSP(8);
        LiveWindow.addActuator("DriveTrain", "RightDrive2", (VictorSP) driveTrainRightDrive2);
        
        elevatorElevatorDrive1 = new VictorSP(1);
        LiveWindow.addActuator("Elevator", "ElevatorDrive1", (VictorSP) elevatorElevatorDrive1);
        
        elevatorElevatorDrive2 = new VictorSP(0);
        LiveWindow.addActuator("Elevator", "ElevatorDrive2", (VictorSP) elevatorElevatorDrive2);
        
        elevatorHeightSensor = new AnalogInput(0);
        LiveWindow.addSensor("Elevator", "HeightSensor", elevatorHeightSensor);
        
        intakesIntakeDrive1 = new VictorSP(6);
        LiveWindow.addActuator("Intakes", "IntakeDrive1", (VictorSP) intakesIntakeDrive1);
        
        intakesIntakeDrive2 = new VictorSP(7);
        LiveWindow.addActuator("Intakes", "IntakeDrive2", (VictorSP) intakesIntakeDrive2);
        
        intakesIntakeGrabber = new DoubleSolenoid(0, 0, 7);      
        LiveWindow.addActuator("Intakes", "IntakeGrabber", intakesIntakeGrabber);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
