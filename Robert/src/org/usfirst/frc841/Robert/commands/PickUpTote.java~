// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc841.Robert.commands;
import edu.wpi.first.wpilibj.command.CommandGroup;

/**
 *
 */
public class PickUpTote extends CommandGroup {
    
    public  PickUpTote() {
        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()   
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
    	
    	//Keep the angle of the elevator at 65 deg
    	//addParallel(new SetElevatorAngle( .233 ));
    	
    	//bring down the carrage to to the top of the one tote
    	addSequential(new HoldTote());
    	addParallel(new SetElevatorAngle(0.339)); // place tote angle
    	addSequential(new SetElevatorHeight(1.617)); // place elevator heigh
    	addSequential(new SpitOutTote());
    	addSequential(new WaitCommand(0.02));
    	addSequential(new HoldTote());
    	addSequential(new SetElevatorHeight(0.44)); // down
    	addSequential(new SuckTote());
    	addSequential(new WaitCommand(0.25));
    	addSequential(new ReleaseTote());
    	addSequential(new SetElevatorHeight(0.691 )); //hook
    	addSequential(new SetElevatorAngle( 0.113)); // tilt back
    	addSequential(new SetElevatorHeight(2.313));
    	
    	/*
    	 * comp robot
    	 *//*
    	addSequential(new HoldTote());
    	//addSequential(new WaitCommand(0.25));
    	addSequential(new SetElevatorAngle(0.515)); // place tote angle
    	//addSequential(new WaitCommand(0.5));
    	addSequential(new SetElevatorHeight(1.674)); // place elevator height
    	//addSequential(new WaitCommand(0.5));
    	addSequential(new SetElevatorAngle(0.377)); //tilt angle midway
    	//addSequential(new WaitCommand(0.5));
    	addSequential(new SpitOutTote());
    	  addSequential(new WaitCommand(0.005));
    	addSequential(new HoldTote());
    	//addSequential(new WaitCommand(0.005));
    	addSequential(new SetElevatorHeight(0.305)); // down
    	//addSequential(new WaitCommand(0.5));
    	addSequential(new SuckTote());
    	addSequential(new WaitCommand(0.75));
    	addSequential(new ReleaseTote());
    	addSequential(new SetElevatorAngle(.515)); // lean forward
    	//addSequential(new WaitCommand(0.5));
    	addSequential(new SetElevatorHeight(0.682 )); //hook
    	//addSequential(new WaitCommand(0.5));
    	addSequential(new SetElevatorAngle( 0.239)); // tilt back
    	//
    	//addSequential(new WaitCommand(0.5));
    	addSequential(new SetElevatorHeight(2.542));
    	*/
    	
    	
    	
    	//Open Intakes
    	//addParallel(new ReleaseTote());
    	
    	//Turn on Intakes
    	//addSequential(new BringInTote()); 
    	
    	//bring carrage up to to pick up tote slightly off the ground
    	//addSequential(new SetElevatorHeight( 0.027 ));
    	//tilt the elevator back to 65 deg

    	//bring carrage up to stored level.
    	//addSequential( new SetElevatorHeight( 0.027 ));
    	
    }
}
